{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toshi\\\\Desktop\\\\TripMood\\\\trip-moodboard\\\\src\\\\components\\\\Timeline.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMoodboard } from '../context/MoodboardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineBar = styled.div`\n  width: 100%;\n  background: #e0e0e0;\n  border-radius: 8px;\n  height: 56px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 24px 0 0 0;\n  padding: 0 32px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.04);\n`;\n_c = TimelineBar;\nconst TimeButton = styled.button`\n  background: ${({\n  selected\n}) => selected ? '#1976d2' : 'white'};\n  color: ${({\n  selected\n}) => selected ? 'white' : '#1976d2'};\n  border: 2px solid #1976d2;\n  border-radius: 24px;\n  padding: 8px 18px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  outline: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: ${({\n  selected\n}) => selected ? '0 2px 8px rgba(25, 118, 210, 0.15)' : 'none'};\n  transition: background 0.2s, color 0.2s, box-shadow 0.2s;\n  position: relative;\n\n  &:hover {\n    background: #1976d2;\n    color: white;\n  }\n`;\n_c2 = TimeButton;\nconst StickerCount = styled.span`\n  background: #fff;\n  color: #1976d2;\n  border: 1.5px solid #1976d2;\n  border-radius: 50%;\n  font-size: 0.8rem;\n  font-weight: 600;\n  width: 22px;\n  height: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: -14px;\n  right: -10px;\n  box-shadow: 0 1px 4px rgba(25, 118, 210, 0.08);\n`;\n_c3 = StickerCount;\nconst Timeline = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useMoodboard();\n  const times = ['00:00', '03:00', '06:00', '09:00', '12:00', '15:00', '18:00', '21:00'];\n  const handleTimeClick = time => {\n    dispatch({\n      type: 'SET_TIME',\n      payload: time\n    });\n  };\n  const getStickerCount = time => {\n    return state.stickers.filter(sticker => sticker.time === time).length;\n  };\n  return /*#__PURE__*/_jsxDEV(TimelineBar, {\n    children: times.map(time => /*#__PURE__*/_jsxDEV(TimeButton, {\n      selected: state.selectedTime === time,\n      onClick: () => handleTimeClick(time),\n      children: [time, getStickerCount(time) > 0 && /*#__PURE__*/_jsxDEV(StickerCount, {\n        children: getStickerCount(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, time, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"apx77jnpjNtN3vv0NPh/F4XzNyI=\", false, function () {\n  return [useMoodboard];\n});\n_c4 = Timeline;\nexport default Timeline;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TimelineBar\");\n$RefreshReg$(_c2, \"TimeButton\");\n$RefreshReg$(_c3, \"StickerCount\");\n$RefreshReg$(_c4, \"Timeline\");","map":{"version":3,"names":["React","styled","useMoodboard","jsxDEV","_jsxDEV","TimelineBar","div","_c","TimeButton","button","selected","_c2","StickerCount","span","_c3","Timeline","_s","state","dispatch","times","handleTimeClick","time","type","payload","getStickerCount","stickers","filter","sticker","length","children","map","selectedTime","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/src/components/Timeline.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMoodboard } from '../context/MoodboardContext';\r\n\r\nconst TimelineBar = styled.div`\r\n  width: 100%;\r\n  background: #e0e0e0;\r\n  border-radius: 8px;\r\n  height: 56px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 24px 0 0 0;\r\n  padding: 0 32px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.04);\r\n`;\r\n\r\nconst TimeButton = styled.button<{ selected: boolean }>`\r\n  background: ${({ selected }) => (selected ? '#1976d2' : 'white')};\r\n  color: ${({ selected }) => (selected ? 'white' : '#1976d2')};\r\n  border: 2px solid #1976d2;\r\n  border-radius: 24px;\r\n  padding: 8px 18px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  outline: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-shadow: ${({ selected }) => (selected ? '0 2px 8px rgba(25, 118, 210, 0.15)' : 'none')};\r\n  transition: background 0.2s, color 0.2s, box-shadow 0.2s;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background: #1976d2;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst StickerCount = styled.span`\r\n  background: #fff;\r\n  color: #1976d2;\r\n  border: 1.5px solid #1976d2;\r\n  border-radius: 50%;\r\n  font-size: 0.8rem;\r\n  font-weight: 600;\r\n  width: 22px;\r\n  height: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: -14px;\r\n  right: -10px;\r\n  box-shadow: 0 1px 4px rgba(25, 118, 210, 0.08);\r\n`;\r\n\r\nconst Timeline: React.FC = () => {\r\n  const { state, dispatch } = useMoodboard();\r\n  const times = ['00:00', '03:00', '06:00', '09:00', '12:00', '15:00', '18:00', '21:00'];\r\n\r\n  const handleTimeClick = (time: string) => {\r\n    dispatch({ type: 'SET_TIME', payload: time });\r\n  };\r\n\r\n  const getStickerCount = (time: string) => {\r\n    return state.stickers.filter(sticker => sticker.time === time).length;\r\n  };\r\n\r\n  return (\r\n    <TimelineBar>\r\n      {times.map(time => (\r\n        <TimeButton\r\n          key={time}\r\n          selected={state.selectedTime === time}\r\n          onClick={() => handleTimeClick(time)}\r\n        >\r\n          {time}\r\n          {getStickerCount(time) > 0 && (\r\n            <StickerCount>{getStickerCount(time)}</StickerCount>\r\n          )}\r\n        </TimeButton>\r\n      ))}\r\n    </TimelineBar>\r\n  );\r\n};\r\n\r\nexport default Timeline; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,YAAY,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,WAAW;AAajB,MAAMG,UAAU,GAAGP,MAAM,CAACQ,MAA6B;AACvD,gBAAgB,CAAC;EAAEC;AAAS,CAAC,KAAMA,QAAQ,GAAG,SAAS,GAAG,OAAQ;AAClE,WAAW,CAAC;EAAEA;AAAS,CAAC,KAAMA,QAAQ,GAAG,OAAO,GAAG,SAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,CAAC;EAAEA;AAAS,CAAC,KAAMA,QAAQ,GAAG,oCAAoC,GAAG,MAAO;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GArBIH,UAAU;AAuBhB,MAAMI,YAAY,GAAGX,MAAM,CAACY,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAhBIF,YAAY;AAkBlB,MAAMG,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGhB,YAAY,CAAC,CAAC;EAC1C,MAAMiB,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAEtF,MAAMC,eAAe,GAAIC,IAAY,IAAK;IACxCH,QAAQ,CAAC;MAAEI,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMG,eAAe,GAAIH,IAAY,IAAK;IACxC,OAAOJ,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACN,IAAI,KAAKA,IAAI,CAAC,CAACO,MAAM;EACvE,CAAC;EAED,oBACExB,OAAA,CAACC,WAAW;IAAAwB,QAAA,EACTV,KAAK,CAACW,GAAG,CAACT,IAAI,iBACbjB,OAAA,CAACI,UAAU;MAETE,QAAQ,EAAEO,KAAK,CAACc,YAAY,KAAKV,IAAK;MACtCW,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAACC,IAAI,CAAE;MAAAQ,QAAA,GAEpCR,IAAI,EACJG,eAAe,CAACH,IAAI,CAAC,GAAG,CAAC,iBACxBjB,OAAA,CAACQ,YAAY;QAAAiB,QAAA,EAAEL,eAAe,CAACH,IAAI;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACpD;IAAA,GAPIf,IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQC,CACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAElB,CAAC;AAACpB,EAAA,CA5BID,QAAkB;EAAA,QACMb,YAAY;AAAA;AAAAmC,GAAA,GADpCtB,QAAkB;AA8BxB,eAAeA,QAAQ;AAAC,IAAAR,EAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}