{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/toshi/Desktop/TripMood/trip-moodboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React from'react';import styled from'styled-components';import{Player}from'@lottiefiles/react-lottie-player';import{useMoodboard}from'../context/MoodboardContext';import{stickers,categories}from'./stickersData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SidebarContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  overflow: hidden;\\n  background-color: var(--bg-primary);\\n  border-right: 1px solid var(--border-color);\\n\"])));const ScrollableContent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  overflow-y: auto;\\n  padding-bottom: 16px;\\n\"])));const CategorySection=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 12px;\\n\"])));const CategoryTitle=styled.h3(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: 0.9rem;\\n  color: var(--text-secondary);\\n  margin: 0 0 8px 0;\\n  padding: 0 8px;\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n\"])));const StickersGrid=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr); // you can change to 3 if you want smaller stickers\\n  gap: 8px;\\n  padding: 0 8px;\\n\"])));const StickerItem=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  aspect-ratio: 1;\\n  background: var(--sticker-bg);\\n  border-radius: 12px;\\n  padding: 6px;\\n  cursor: grab;\\n  box-shadow: 0 2px 6px var(--shadow-color);\\n  transition: transform 0.2s, box-shadow 0.2s;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\\n  &:hover {\\n    transform: translateY(-4px);\\n    box-shadow: 0 6px 12px var(--shadow-color);\\n  }\\n\\n  canvas {\\n    width: 100% !important;\\n    height: 100% !important;\\n  }\\n\"])));const Sidebar=()=>{const{dispatch}=useMoodboard();const handleDragStart=(e,sticker)=>{e.dataTransfer.setData('application/json',JSON.stringify(sticker));};return/*#__PURE__*/_jsx(SidebarContainer,{children:/*#__PURE__*/_jsx(ScrollableContent,{children:categories.map(category=>/*#__PURE__*/_jsxs(CategorySection,{children:[/*#__PURE__*/_jsxs(CategoryTitle,{children:[/*#__PURE__*/_jsx(\"span\",{children:category.icon}),category.name]}),/*#__PURE__*/_jsx(StickersGrid,{children:stickers.filter(sticker=>sticker.category===category.id).map(sticker=>/*#__PURE__*/_jsx(StickerItem,{draggable:true,onDragStart:e=>handleDragStart(e,sticker),children:sticker.lottie?/*#__PURE__*/_jsx(Player,{autoplay:true,loop:true,keepLastFrame:true,src:sticker.lottie,style:{width:'80%',height:'80%'}}):sticker.image?/*#__PURE__*/_jsx(\"img\",{src:sticker.image,alt:sticker.name,style:{width:'70%',height:'70%',objectFit:'contain'}}):null},sticker.id))})]},category.id))})});};export default Sidebar;","map":{"version":3,"names":["React","styled","Player","useMoodboard","stickers","categories","jsx","_jsx","jsxs","_jsxs","SidebarContainer","div","_templateObject","_taggedTemplateLiteral","ScrollableContent","_templateObject2","CategorySection","_templateObject3","CategoryTitle","h3","_templateObject4","StickersGrid","_templateObject5","StickerItem","_templateObject6","Sidebar","dispatch","handleDragStart","e","sticker","dataTransfer","setData","JSON","stringify","children","map","category","icon","name","filter","id","draggable","onDragStart","lottie","autoplay","loop","keepLastFrame","src","style","width","height","image","alt","objectFit"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/src/components/Sidebar.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Player } from '@lottiefiles/react-lottie-player';\r\nimport { useMoodboard } from '../context/MoodboardContext';\r\nimport { stickers, categories } from './stickersData';\r\n\r\nconst SidebarContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  background-color: var(--bg-primary);\r\n  border-right: 1px solid var(--border-color);\r\n`;\r\n\r\nconst ScrollableContent = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding-bottom: 16px;\r\n`;\r\n\r\nconst CategorySection = styled.div`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst CategoryTitle = styled.h3`\r\n  font-size: 0.9rem;\r\n  color: var(--text-secondary);\r\n  margin: 0 0 8px 0;\r\n  padding: 0 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n`;\r\n\r\nconst StickersGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr); // you can change to 3 if you want smaller stickers\r\n  gap: 8px;\r\n  padding: 0 8px;\r\n`;\r\n\r\nconst StickerItem = styled.div`\r\n  aspect-ratio: 1;\r\n  background: var(--sticker-bg);\r\n  border-radius: 12px;\r\n  padding: 6px;\r\n  cursor: grab;\r\n  box-shadow: 0 2px 6px var(--shadow-color);\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    transform: translateY(-4px);\r\n    box-shadow: 0 6px 12px var(--shadow-color);\r\n  }\r\n\r\n  canvas {\r\n    width: 100% !important;\r\n    height: 100% !important;\r\n  }\r\n`;\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const { dispatch } = useMoodboard();\r\n\r\n  const handleDragStart = (e: React.DragEvent, sticker: any) => {\r\n    e.dataTransfer.setData('application/json', JSON.stringify(sticker));\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <ScrollableContent>\r\n        {categories.map(category => (\r\n          <CategorySection key={category.id}>\r\n            <CategoryTitle>\r\n              <span>{category.icon}</span>\r\n              {category.name}\r\n            </CategoryTitle>\r\n            <StickersGrid>\r\n              {stickers\r\n                .filter(sticker => sticker.category === category.id)\r\n                .map(sticker => (\r\n                  <StickerItem\r\n                    key={sticker.id}\r\n                    draggable\r\n                    onDragStart={e => handleDragStart(e, sticker)}\r\n                  >\r\n                    {sticker.lottie ? (\r\n                      <Player\r\n                        autoplay\r\n                        loop\r\n                        keepLastFrame\r\n                        src={sticker.lottie}\r\n                        style={{ width: '80%', height: '80%' }}\r\n                      />\r\n                    ) : sticker.image ? (\r\n                      <img\r\n                        src={sticker.image}\r\n                        alt={sticker.name}\r\n                        style={{ width: '70%', height: '70%', objectFit: 'contain' }}\r\n                      />\r\n                    ) : null}\r\n                  </StickerItem>\r\n                ))}\r\n            </StickersGrid>\r\n          </CategorySection>\r\n        ))}\r\n      </ScrollableContent>\r\n    </SidebarContainer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"6PAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,MAAM,KAAQ,kCAAkC,CACzD,OAASC,YAAY,KAAQ,6BAA6B,CAC1D,OAASC,QAAQ,CAAEC,UAAU,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,KAAM,CAAAC,gBAAgB,CAAGT,MAAM,CAACU,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,qLAOlC,CAED,KAAM,CAAAC,iBAAiB,CAAGb,MAAM,CAACU,GAAG,CAAAI,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,oEAInC,CAED,KAAM,CAAAG,eAAe,CAAGf,MAAM,CAACU,GAAG,CAAAM,gBAAA,GAAAA,gBAAA,CAAAJ,sBAAA,kCAEjC,CAED,KAAM,CAAAK,aAAa,CAAGjB,MAAM,CAACkB,EAAE,CAAAC,gBAAA,GAAAA,gBAAA,CAAAP,sBAAA,iKAQ9B,CAED,KAAM,CAAAQ,YAAY,CAAGpB,MAAM,CAACU,GAAG,CAAAW,gBAAA,GAAAA,gBAAA,CAAAT,sBAAA,0JAK9B,CAED,KAAM,CAAAU,WAAW,CAAGtB,MAAM,CAACU,GAAG,CAAAa,gBAAA,GAAAA,gBAAA,CAAAX,sBAAA,mdAqB7B,CAED,KAAM,CAAAY,OAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAEC,QAAS,CAAC,CAAGvB,YAAY,CAAC,CAAC,CAEnC,KAAM,CAAAwB,eAAe,CAAGA,CAACC,CAAkB,CAAEC,OAAY,GAAK,CAC5DD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC,CACrE,CAAC,CAED,mBACEtB,IAAA,CAACG,gBAAgB,EAAAwB,QAAA,cACf3B,IAAA,CAACO,iBAAiB,EAAAoB,QAAA,CACf7B,UAAU,CAAC8B,GAAG,CAACC,QAAQ,eACtB3B,KAAA,CAACO,eAAe,EAAAkB,QAAA,eACdzB,KAAA,CAACS,aAAa,EAAAgB,QAAA,eACZ3B,IAAA,SAAA2B,QAAA,CAAOE,QAAQ,CAACC,IAAI,CAAO,CAAC,CAC3BD,QAAQ,CAACE,IAAI,EACD,CAAC,cAChB/B,IAAA,CAACc,YAAY,EAAAa,QAAA,CACV9B,QAAQ,CACNmC,MAAM,CAACV,OAAO,EAAIA,OAAO,CAACO,QAAQ,GAAKA,QAAQ,CAACI,EAAE,CAAC,CACnDL,GAAG,CAACN,OAAO,eACVtB,IAAA,CAACgB,WAAW,EAEVkB,SAAS,MACTC,WAAW,CAAEd,CAAC,EAAID,eAAe,CAACC,CAAC,CAAEC,OAAO,CAAE,CAAAK,QAAA,CAE7CL,OAAO,CAACc,MAAM,cACbpC,IAAA,CAACL,MAAM,EACL0C,QAAQ,MACRC,IAAI,MACJC,aAAa,MACbC,GAAG,CAAElB,OAAO,CAACc,MAAO,CACpBK,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,KAAM,CAAE,CACxC,CAAC,CACArB,OAAO,CAACsB,KAAK,cACf5C,IAAA,QACEwC,GAAG,CAAElB,OAAO,CAACsB,KAAM,CACnBC,GAAG,CAAEvB,OAAO,CAACS,IAAK,CAClBU,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,KAAK,CAAEG,SAAS,CAAE,SAAU,CAAE,CAC9D,CAAC,CACA,IAAI,EAlBHxB,OAAO,CAACW,EAmBF,CACd,CAAC,CACQ,CAAC,GA/BKJ,QAAQ,CAACI,EAgCd,CAClB,CAAC,CACe,CAAC,CACJ,CAAC,CAEvB,CAAC,CAED,cAAe,CAAAf,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}