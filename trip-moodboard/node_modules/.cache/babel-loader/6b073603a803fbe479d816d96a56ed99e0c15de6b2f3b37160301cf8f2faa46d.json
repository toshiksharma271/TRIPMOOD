{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toshi\\\\Desktop\\\\TripMood\\\\trip-moodboard\\\\src\\\\components\\\\Canvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// Vertical float animation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst float = keyframes`\n  0%, 100% { transform: translateY(0) rotate(0deg); }\n  50% { transform: translateY(-15px) rotate(0deg); }\n`;\n\n// Spin on hover animation\nconst spin = keyframes`\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n`;\n\n// Styled box with animations and hover effects\nconst InteractiveBox = styled.div`\n  position: absolute;\n  left: ${({\n  x\n}) => x}%;\n  top: ${({\n  y\n}) => y}%;\n  width: ${({\n  size\n}) => size}px;\n  height: ${({\n  size\n}) => size}px;\n  background: var(--box-bg);\n  border: 2px solid var(--box-border);\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  animation: ${float} 5s ease-in-out infinite;\n  animation-delay: ${({\n  delay\n}) => delay}s;\n  transition: transform 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;\n  cursor: pointer;\n  z-index: 1;\n\n  &:hover {\n    animation-play-state: paused; /* pause float while spinning */\n    animation: ${spin} 1s linear infinite;\n    background-color: #3b82f6; /* blue on hover */\n    border-color: #2563eb;\n    transform: scale(1.1);\n    box-shadow: 0 8px 16px rgba(59,130,246,0.5);\n  }\n`;\n_c = InteractiveBox;\nconst CanvasArea = styled.div`\n  position: absolute;\n  top: 0; left: 0; right: 0; bottom: 0;\n  pointer-events: none; /* let mouse events pass through container */\n  z-index: 1;\n`;\n_c2 = CanvasArea;\nconst Canvas = () => {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  useEffect(() => {\n    // Generate 20 random boxes with random position, size, and animation delay\n    const generateBoxes = () => Array.from({\n      length: 20\n    }, () => ({\n      x: Math.random() * 85 + 5,\n      // avoid edges (5%-90%)\n      y: Math.random() * 85 + 5,\n      size: Math.random() * 60 + 30,\n      // size between 30 and 90 px\n      delay: Math.random() * 5\n    }));\n    setBoxes(generateBoxes());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CanvasArea, {\n    children: boxes.map((box, i) => /*#__PURE__*/_jsxDEV(InteractiveBox, {\n      x: box.x,\n      y: box.y,\n      size: box.size,\n      delay: box.delay\n      // Enable pointer events for hover on each box\n      ,\n      style: {\n        pointerEvents: 'auto'\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"PnjuLcwD2FubuleIHYnyL8i7wII=\");\n_c3 = Canvas;\nexport default Canvas;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InteractiveBox\");\n$RefreshReg$(_c2, \"CanvasArea\");\n$RefreshReg$(_c3, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","float","spin","InteractiveBox","div","x","y","size","delay","_c","CanvasArea","_c2","Canvas","_s","boxes","setBoxes","generateBoxes","Array","from","length","Math","random","children","map","box","i","style","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/src/components/Canvas.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n// Vertical float animation\r\nconst float = keyframes`\r\n  0%, 100% { transform: translateY(0) rotate(0deg); }\r\n  50% { transform: translateY(-15px) rotate(0deg); }\r\n`;\r\n\r\n// Spin on hover animation\r\nconst spin = keyframes`\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n`;\r\n\r\n// Styled box with animations and hover effects\r\nconst InteractiveBox = styled.div<{\r\n  x: number;\r\n  y: number;\r\n  size: number;\r\n  delay: number;\r\n}>`\r\n  position: absolute;\r\n  left: ${({ x }) => x}%;\r\n  top: ${({ y }) => y}%;\r\n  width: ${({ size }) => size}px;\r\n  height: ${({ size }) => size}px;\r\n  background: var(--box-bg);\r\n  border: 2px solid var(--box-border);\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n  animation: ${float} 5s ease-in-out infinite;\r\n  animation-delay: ${({ delay }) => delay}s;\r\n  transition: transform 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;\r\n  cursor: pointer;\r\n  z-index: 1;\r\n\r\n  &:hover {\r\n    animation-play-state: paused; /* pause float while spinning */\r\n    animation: ${spin} 1s linear infinite;\r\n    background-color: #3b82f6; /* blue on hover */\r\n    border-color: #2563eb;\r\n    transform: scale(1.1);\r\n    box-shadow: 0 8px 16px rgba(59,130,246,0.5);\r\n  }\r\n`;\r\n\r\nconst CanvasArea = styled.div`\r\n  position: absolute;\r\n  top: 0; left: 0; right: 0; bottom: 0;\r\n  pointer-events: none; /* let mouse events pass through container */\r\n  z-index: 1;\r\n`;\r\n\r\nconst Canvas: React.FC = () => {\r\n  const [boxes, setBoxes] = useState<\r\n    { x: number; y: number; size: number; delay: number }[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    // Generate 20 random boxes with random position, size, and animation delay\r\n    const generateBoxes = () =>\r\n      Array.from({ length: 20 }, () => ({\r\n        x: Math.random() * 85 + 5, // avoid edges (5%-90%)\r\n        y: Math.random() * 85 + 5,\r\n        size: Math.random() * 60 + 30, // size between 30 and 90 px\r\n        delay: Math.random() * 5,\r\n      }));\r\n    setBoxes(generateBoxes());\r\n  }, []);\r\n\r\n  return (\r\n    <CanvasArea>\r\n      {boxes.map((box, i) => (\r\n        <InteractiveBox\r\n          key={i}\r\n          x={box.x}\r\n          y={box.y}\r\n          size={box.size}\r\n          delay={box.delay}\r\n          // Enable pointer events for hover on each box\r\n          style={{ pointerEvents: 'auto' }}\r\n        />\r\n      ))}\r\n    </CanvasArea>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGH,SAAS;AACvB;AACA;AACA,CAAC;;AAED;AACA,MAAMI,IAAI,GAAGJ,SAAS;AACtB;AACA;AACA,CAAC;;AAED;AACA,MAAMK,cAAc,GAAGN,MAAM,CAACO,GAK5B;AACF;AACA,UAAU,CAAC;EAAEC;AAAE,CAAC,KAAKA,CAAC;AACtB,SAAS,CAAC;EAAEC;AAAE,CAAC,KAAKA,CAAC;AACrB,WAAW,CAAC;EAAEC;AAAK,CAAC,KAAKA,IAAI;AAC7B,YAAY,CAAC;EAAEA;AAAK,CAAC,KAAKA,IAAI;AAC9B;AACA;AACA;AACA;AACA,eAAeN,KAAK;AACpB,qBAAqB,CAAC;EAAEO;AAAM,CAAC,KAAKA,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBN,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;AAACO,EAAA,GA7BIN,cAAc;AA+BpB,MAAMO,UAAU,GAAGb,MAAM,CAACO,GAAG;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GALID,UAAU;AAOhB,MAAME,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAEhC,EAAE,CAAC;EAELD,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,aAAa,GAAGA,CAAA,KACpBC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,OAAO;MAChCd,CAAC,EAAEe,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MAAE;MAC3Bf,CAAC,EAAEc,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MACzBd,IAAI,EAAEa,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;MAAE;MAC/Bb,KAAK,EAAEY,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;IACzB,CAAC,CAAC,CAAC;IACLN,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAACU,UAAU;IAAAY,QAAA,EACRR,KAAK,CAACS,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAChBzB,OAAA,CAACG,cAAc;MAEbE,CAAC,EAAEmB,GAAG,CAACnB,CAAE;MACTC,CAAC,EAAEkB,GAAG,CAAClB,CAAE;MACTC,IAAI,EAAEiB,GAAG,CAACjB,IAAK;MACfC,KAAK,EAAEgB,GAAG,CAAChB;MACX;MAAA;MACAkB,KAAK,EAAE;QAAEC,aAAa,EAAE;MAAO;IAAE,GAN5BF,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOP,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB,CAAC;AAAClB,EAAA,CAhCID,MAAgB;AAAAoB,GAAA,GAAhBpB,MAAgB;AAkCtB,eAAeA,MAAM;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}