{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toshi\\\\Desktop\\\\TripMood\\\\trip-moodboard\\\\src\\\\components\\\\Sidebar.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Player } from '@lottiefiles/react-lottie-player';\nimport { useMoodboard } from '../context/MoodboardContext';\nimport { stickers, categories } from './stickersData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  background-color: var(--bg-primary);\n  border-right: 1px solid var(--border-color);\n`;\n_c = SidebarContainer;\nconst ScrollableContent = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding-bottom: 16px;\n`;\n_c2 = ScrollableContent;\nconst CategorySection = styled.div`\n  margin-bottom: 12px;\n`;\n_c3 = CategorySection;\nconst CategoryTitle = styled.h3`\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n  margin: 0 0 8px 0;\n  padding: 0 8px;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n_c4 = CategoryTitle;\nconst StickersGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); // you can change to 3 if you want smaller stickers\n  gap: 8px;\n  padding: 0 8px;\n`;\n_c5 = StickersGrid;\nconst StickerItem = styled.div`\n  aspect-ratio: 1;\n  background: var(--sticker-bg);\n  border-radius: 12px;\n  padding: 6px;\n  cursor: grab;\n  box-shadow: 0 2px 6px var(--shadow-color);\n  transition: transform 0.2s, box-shadow 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 6px 12px var(--shadow-color);\n  }\n\n  canvas {\n    width: 100% !important;\n    height: 100% !important;\n  }\n`;\n_c6 = StickerItem;\nconst Sidebar = () => {\n  _s();\n  const {\n    dispatch\n  } = useMoodboard();\n  const handleDragStart = (e, sticker) => {\n    e.dataTransfer.setData('application/json', JSON.stringify(sticker));\n  };\n  return /*#__PURE__*/_jsxDEV(SidebarContainer, {\n    children: /*#__PURE__*/_jsxDEV(ScrollableContent, {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(CategorySection, {\n        children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: category.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), category.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StickersGrid, {\n          children: stickers.filter(sticker => sticker.category === category.id).map(sticker => /*#__PURE__*/_jsxDEV(StickerItem, {\n            draggable: true,\n            onDragStart: e => handleDragStart(e, sticker),\n            children: sticker.lottie ? /*#__PURE__*/_jsxDEV(Player, {\n              autoplay: true,\n              loop: true,\n              keepLastFrame: true,\n              src: sticker.lottie,\n              style: {\n                width: '80%',\n                height: '80%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this) : sticker.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sticker.image,\n              alt: sticker.name,\n              style: {\n                width: '70%',\n                height: '70%',\n                objectFit: 'contain'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this) : null\n          }, sticker.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"Tcb37CbtBNxl7QU0h09cO9yqAdc=\", false, function () {\n  return [useMoodboard];\n});\n_c7 = Sidebar;\nexport default Sidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SidebarContainer\");\n$RefreshReg$(_c2, \"ScrollableContent\");\n$RefreshReg$(_c3, \"CategorySection\");\n$RefreshReg$(_c4, \"CategoryTitle\");\n$RefreshReg$(_c5, \"StickersGrid\");\n$RefreshReg$(_c6, \"StickerItem\");\n$RefreshReg$(_c7, \"Sidebar\");","map":{"version":3,"names":["React","styled","Player","useMoodboard","stickers","categories","jsxDEV","_jsxDEV","SidebarContainer","div","_c","ScrollableContent","_c2","CategorySection","_c3","CategoryTitle","h3","_c4","StickersGrid","_c5","StickerItem","_c6","Sidebar","_s","dispatch","handleDragStart","e","sticker","dataTransfer","setData","JSON","stringify","children","map","category","icon","fileName","_jsxFileName","lineNumber","columnNumber","name","filter","id","draggable","onDragStart","lottie","autoplay","loop","keepLastFrame","src","style","width","height","image","alt","objectFit","_c7","$RefreshReg$"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/src/components/Sidebar.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Player } from '@lottiefiles/react-lottie-player';\r\nimport { useMoodboard } from '../context/MoodboardContext';\r\nimport { stickers, categories } from './stickersData';\r\n\r\nconst SidebarContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  background-color: var(--bg-primary);\r\n  border-right: 1px solid var(--border-color);\r\n`;\r\n\r\nconst ScrollableContent = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding-bottom: 16px;\r\n`;\r\n\r\nconst CategorySection = styled.div`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst CategoryTitle = styled.h3`\r\n  font-size: 0.9rem;\r\n  color: var(--text-secondary);\r\n  margin: 0 0 8px 0;\r\n  padding: 0 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n`;\r\n\r\nconst StickersGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr); // you can change to 3 if you want smaller stickers\r\n  gap: 8px;\r\n  padding: 0 8px;\r\n`;\r\n\r\nconst StickerItem = styled.div`\r\n  aspect-ratio: 1;\r\n  background: var(--sticker-bg);\r\n  border-radius: 12px;\r\n  padding: 6px;\r\n  cursor: grab;\r\n  box-shadow: 0 2px 6px var(--shadow-color);\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    transform: translateY(-4px);\r\n    box-shadow: 0 6px 12px var(--shadow-color);\r\n  }\r\n\r\n  canvas {\r\n    width: 100% !important;\r\n    height: 100% !important;\r\n  }\r\n`;\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const { dispatch } = useMoodboard();\r\n\r\n  const handleDragStart = (e: React.DragEvent, sticker: any) => {\r\n    e.dataTransfer.setData('application/json', JSON.stringify(sticker));\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <ScrollableContent>\r\n        {categories.map(category => (\r\n          <CategorySection key={category.id}>\r\n            <CategoryTitle>\r\n              <span>{category.icon}</span>\r\n              {category.name}\r\n            </CategoryTitle>\r\n            <StickersGrid>\r\n              {stickers\r\n                .filter(sticker => sticker.category === category.id)\r\n                .map(sticker => (\r\n                  <StickerItem\r\n                    key={sticker.id}\r\n                    draggable\r\n                    onDragStart={e => handleDragStart(e, sticker)}\r\n                  >\r\n                    {sticker.lottie ? (\r\n                      <Player\r\n                        autoplay\r\n                        loop\r\n                        keepLastFrame\r\n                        src={sticker.lottie}\r\n                        style={{ width: '80%', height: '80%' }}\r\n                      />\r\n                    ) : sticker.image ? (\r\n                      <img\r\n                        src={sticker.image}\r\n                        alt={sticker.name}\r\n                        style={{ width: '70%', height: '70%', objectFit: 'contain' }}\r\n                      />\r\n                    ) : null}\r\n                  </StickerItem>\r\n                ))}\r\n            </StickersGrid>\r\n          </CategorySection>\r\n        ))}\r\n      </ScrollableContent>\r\n    </SidebarContainer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,kCAAkC;AACzD,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,QAAQ,EAAEC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,gBAAgB,GAAGP,MAAM,CAACQ,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,gBAAgB;AAStB,MAAMG,iBAAiB,GAAGV,MAAM,CAACQ,GAAG;AACpC;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,iBAAiB;AAMvB,MAAME,eAAe,GAAGZ,MAAM,CAACQ,GAAG;AAClC;AACA,CAAC;AAACK,GAAA,GAFID,eAAe;AAIrB,MAAME,aAAa,GAAGd,MAAM,CAACe,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,aAAa;AAUnB,MAAMG,YAAY,GAAGjB,MAAM,CAACQ,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GALID,YAAY;AAOlB,MAAME,WAAW,GAAGnB,MAAM,CAACQ,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GArBID,WAAW;AAuBjB,MAAME,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAS,CAAC,GAAGrB,YAAY,CAAC,CAAC;EAEnC,MAAMsB,eAAe,GAAGA,CAACC,CAAkB,EAAEC,OAAY,KAAK;IAC5DD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;EACrE,CAAC;EAED,oBACEpB,OAAA,CAACC,gBAAgB;IAAAwB,QAAA,eACfzB,OAAA,CAACI,iBAAiB;MAAAqB,QAAA,EACf3B,UAAU,CAAC4B,GAAG,CAACC,QAAQ,iBACtB3B,OAAA,CAACM,eAAe;QAAAmB,QAAA,gBACdzB,OAAA,CAACQ,aAAa;UAAAiB,QAAA,gBACZzB,OAAA;YAAAyB,QAAA,EAAOE,QAAQ,CAACC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC3BL,QAAQ,CAACM,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAChBhC,OAAA,CAACW,YAAY;UAAAc,QAAA,EACV5B,QAAQ,CACNqC,MAAM,CAACd,OAAO,IAAIA,OAAO,CAACO,QAAQ,KAAKA,QAAQ,CAACQ,EAAE,CAAC,CACnDT,GAAG,CAACN,OAAO,iBACVpB,OAAA,CAACa,WAAW;YAEVuB,SAAS;YACTC,WAAW,EAAElB,CAAC,IAAID,eAAe,CAACC,CAAC,EAAEC,OAAO,CAAE;YAAAK,QAAA,EAE7CL,OAAO,CAACkB,MAAM,gBACbtC,OAAA,CAACL,MAAM;cACL4C,QAAQ;cACRC,IAAI;cACJC,aAAa;cACbC,GAAG,EAAEtB,OAAO,CAACkB,MAAO;cACpBK,KAAK,EAAE;gBAAEC,KAAK,EAAE,KAAK;gBAAEC,MAAM,EAAE;cAAM;YAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,GACAZ,OAAO,CAAC0B,KAAK,gBACf9C,OAAA;cACE0C,GAAG,EAAEtB,OAAO,CAAC0B,KAAM;cACnBC,GAAG,EAAE3B,OAAO,CAACa,IAAK;cAClBU,KAAK,EAAE;gBAAEC,KAAK,EAAE,KAAK;gBAAEC,MAAM,EAAE,KAAK;gBAAEG,SAAS,EAAE;cAAU;YAAE;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D,CAAC,GACA;UAAI,GAlBHZ,OAAO,CAACe,EAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBJ,CACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC;MAAA,GA/BKL,QAAQ,CAACQ,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgChB,CAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEvB,CAAC;AAAChB,EAAA,CAhDID,OAAiB;EAAA,QACAnB,YAAY;AAAA;AAAAqD,GAAA,GAD7BlC,OAAiB;AAkDvB,eAAeA,OAAO;AAAC,IAAAZ,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAA/C,EAAA;AAAA+C,YAAA,CAAA7C,GAAA;AAAA6C,YAAA,CAAA3C,GAAA;AAAA2C,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAAtC,GAAA;AAAAsC,YAAA,CAAApC,GAAA;AAAAoC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}