{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"C:/Users/toshi/Desktop/TripMood/trip-moodboard/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nvar _objectSpread = require(\"C:/Users/toshi/Desktop/TripMood/trip-moodboard/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nconst _excluded = [\"axis\", \"bounds\", \"children\", \"defaultPosition\", \"defaultClassName\", \"defaultClassNameDragging\", \"defaultClassNameDragged\", \"position\", \"positionOffset\", \"scale\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DraggableCore\", {\n  enumerable: true,\n  get: function () {\n    return _DraggableCore.default;\n  }\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _domFns = require(\"./utils/domFns\");\nvar _positionFns = require(\"./utils/positionFns\");\nvar _shims = require(\"./utils/shims\");\nvar _DraggableCore = _interopRequireDefault(require(\"./DraggableCore\"));\nvar _log = _interopRequireDefault(require(\"./utils/log\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n} /*:: import type {ControlPosition, PositionOffsetControlPosition, DraggableCoreProps, DraggableCoreDefaultProps} from './DraggableCore';*/\n/*:: import type {Bounds, DraggableEventHandler} from './utils/types';*/\n/*:: import type {Element as ReactElement} from 'react';*/\n/*:: type DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  x: number, y: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean,\n  prevPropsPosition: ?ControlPosition,\n};*/\n/*:: export type DraggableDefaultProps = {\n  ...DraggableCoreDefaultProps,\n  axis: 'both' | 'x' | 'y' | 'none',\n  bounds: Bounds | string | false,\n  defaultClassName: string,\n  defaultClassNameDragging: string,\n  defaultClassNameDragged: string,\n  defaultPosition: ControlPosition,\n  scale: number,\n};*/\n/*:: export type DraggableProps = {\n  ...DraggableCoreProps,\n  ...DraggableDefaultProps,\n  positionOffset: PositionOffsetControlPosition,\n  position: ControlPosition,\n};*/\n//\n// Define <Draggable>\n//\nclass Draggable extends React.Component /*:: <DraggableProps, DraggableState>*/ {\n  // React 16.3+\n  // Arity (props, state)\n  static getDerivedStateFromProps(_ref /*:: */, _ref2 /*:: */) /*: ?Partial<DraggableState>*/{\n    let {\n      position\n    } /*: DraggableProps*/ = _ref /*: DraggableProps*/;\n    let {\n      prevPropsPosition\n    } /*: DraggableState*/ = _ref2 /*: DraggableState*/;\n    // Set x/y if a new position is provided in props that is different than the previous.\n    if (position && (!prevPropsPosition || position.x !== prevPropsPosition.x || position.y !== prevPropsPosition.y)) {\n      (0, _log.default)('Draggable: getDerivedStateFromProps %j', {\n        position,\n        prevPropsPosition\n      });\n      return {\n        x: position.x,\n        y: position.y,\n        prevPropsPosition: _objectSpread({}, position)\n      };\n    }\n    return null;\n  }\n  constructor(props /*: DraggableProps*/) {\n    super(props);\n    _defineProperty(this, \"onDragStart\", (e, coreData) => {\n      (0, _log.default)('Draggable: onDragStart: %j', coreData);\n\n      // Short-circuit if user's callback killed it.\n      const shouldStart = this.props.onStart(e, (0, _positionFns.createDraggableData)(this, coreData));\n      // Kills start event on core as well, so move handlers are never bound.\n      if (shouldStart === false) return false;\n      this.setState({\n        dragging: true,\n        dragged: true\n      });\n    });\n    _defineProperty(this, \"onDrag\", (e, coreData) => {\n      if (!this.state.dragging) return false;\n      (0, _log.default)('Draggable: onDrag: %j', coreData);\n      const uiData = (0, _positionFns.createDraggableData)(this, coreData);\n      const newState = {\n        x: uiData.x,\n        y: uiData.y,\n        slackX: 0,\n        slackY: 0\n      };\n\n      // Keep within bounds.\n      if (this.props.bounds) {\n        // Save original x and y.\n        const {\n          x,\n          y\n        } = newState;\n\n        // Add slack to the values used to calculate bound position. This will ensure that if\n        // we start removing slack, the element won't react to it right away until it's been\n        // completely removed.\n        newState.x += this.state.slackX;\n        newState.y += this.state.slackY;\n\n        // Get bound position. This will ceil/floor the x and y within the boundaries.\n        const [newStateX, newStateY] = (0, _positionFns.getBoundPosition)(this, newState.x, newState.y);\n        newState.x = newStateX;\n        newState.y = newStateY;\n\n        // Recalculate slack by noting how much was shaved by the boundPosition handler.\n        newState.slackX = this.state.slackX + (x - newState.x);\n        newState.slackY = this.state.slackY + (y - newState.y);\n\n        // Update the event we fire to reflect what really happened after bounds took effect.\n        uiData.x = newState.x;\n        uiData.y = newState.y;\n        uiData.deltaX = newState.x - this.state.x;\n        uiData.deltaY = newState.y - this.state.y;\n      }\n\n      // Short-circuit if user's callback killed it.\n      const shouldUpdate = this.props.onDrag(e, uiData);\n      if (shouldUpdate === false) return false;\n      this.setState(newState);\n    });\n    _defineProperty(this, \"onDragStop\", (e, coreData) => {\n      if (!this.state.dragging) return false;\n\n      // Short-circuit if user's callback killed it.\n      const shouldContinue = this.props.onStop(e, (0, _positionFns.createDraggableData)(this, coreData));\n      if (shouldContinue === false) return false;\n      (0, _log.default)('Draggable: onDragStop: %j', coreData);\n      const newState /*: Partial<DraggableState>*/ = {\n        dragging: false,\n        slackX: 0,\n        slackY: 0\n      };\n\n      // If this is a controlled component, the result of this operation will be to\n      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n      const controlled = Boolean(this.props.position);\n      if (controlled) {\n        const {\n          x,\n          y\n        } = this.props.position;\n        newState.x = x;\n        newState.y = y;\n      }\n      this.setState(newState);\n    });\n    this.state = {\n      // Whether or not we are currently dragging.\n      dragging: false,\n      // Whether or not we have been dragged before.\n      dragged: false,\n      // Current transform x and y.\n      x: props.position ? props.position.x : props.defaultPosition.x,\n      y: props.position ? props.position.y : props.defaultPosition.y,\n      prevPropsPosition: _objectSpread({}, props.position),\n      // Used for compensating for out-of-bounds drags\n      slackX: 0,\n      slackY: 0,\n      // Can only determine if SVG after mounting\n      isElementSVG: false\n    };\n    if (props.position && !(props.onDrag || props.onStop)) {\n      // eslint-disable-next-line no-console\n      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n    }\n  }\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if (typeof window.SVGElement !== 'undefined' && this.findDOMNode() instanceof window.SVGElement) {\n      this.setState({\n        isElementSVG: true\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.setState({\n      dragging: false\n    }); // prevents invariant if unmounted while dragging\n  }\n\n  // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n  // the underlying DOM node ourselves. See the README for more information.\n  findDOMNode() /*: ?HTMLElement*/{\n    var _this$props$nodeRef$c, _this$props;\n    return (_this$props$nodeRef$c = (_this$props = this.props) === null || _this$props === void 0 || (_this$props = _this$props.nodeRef) === null || _this$props === void 0 ? void 0 : _this$props.current) !== null && _this$props$nodeRef$c !== void 0 ? _this$props$nodeRef$c : _reactDom.default.findDOMNode(this);\n  }\n  render() /*: ReactElement<any>*/{\n    const _this$props2 = this.props,\n      {\n        axis,\n        bounds,\n        children,\n        defaultPosition,\n        defaultClassName,\n        defaultClassNameDragging,\n        defaultClassNameDragged,\n        position,\n        positionOffset,\n        scale\n      } = _this$props2,\n      draggableCoreProps = _objectWithoutProperties(_this$props2, _excluded);\n    let style = {};\n    let svgTransform = null;\n\n    // If this is controlled, we don't want to move it - unless it's dragging.\n    const controlled = Boolean(position);\n    const draggable = !controlled || this.state.dragging;\n    const validPosition = position || defaultPosition;\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: (0, _positionFns.canDragX)(this) && draggable ? this.state.x : validPosition.x,\n      // Set top if vertical drag is enabled\n      y: (0, _positionFns.canDragY)(this) && draggable ? this.state.y : validPosition.y\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = (0, _domFns.createSVGTransform)(transformOpts, positionOffset);\n    } else {\n      // Add a CSS transform to move the element around. This allows us to move the element around\n      // without worrying about whether or not it is relatively or absolutely positioned.\n      // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n      // has a clean slate.\n      style = (0, _domFns.createCSSTransform)(transformOpts, positionOffset);\n    }\n\n    // Mark with class while dragging\n    const className = (0, _clsx.default)(children.props.className || '', defaultClassName, {\n      [defaultClassNameDragging]: this.state.dragging,\n      [defaultClassNameDragged]: this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return /*#__PURE__*/React.createElement(_DraggableCore.default, _extends({}, draggableCoreProps, {\n      onStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onStop: this.onDragStop\n    }), /*#__PURE__*/React.cloneElement(React.Children.only(children), {\n      className: className,\n      style: _objectSpread(_objectSpread({}, children.props.style), style),\n      transform: svgTransform\n    }));\n  }\n}\nexports.default = Draggable;\n_defineProperty(Draggable, \"displayName\", 'Draggable');\n_defineProperty(Draggable, \"propTypes\", _objectSpread(_objectSpread({}, _DraggableCore.default.propTypes), {}, {\n  /**\n   * `axis` determines which axis the draggable can move.\n   *\n   *  Note that all callbacks will still return data as normal. This only\n   *  controls flushing to the DOM.\n   *\n   * 'both' allows movement horizontally and vertically.\n   * 'x' limits movement to horizontal axis.\n   * 'y' limits movement to vertical axis.\n   * 'none' limits all movement.\n   *\n   * Defaults to 'both'.\n   */\n  axis: _propTypes.default.oneOf(['both', 'x', 'y', 'none']),\n  /**\n   * `bounds` determines the range of movement available to the element.\n   * Available values are:\n   *\n   * 'parent' restricts movement within the Draggable's parent node.\n   *\n   * Alternatively, pass an object with the following properties, all of which are optional:\n   *\n   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n   *\n   * All values are in px.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable bounds={{right: 300, bottom: 300}}>\n   *              <div>Content</div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  bounds: _propTypes.default.oneOfType([_propTypes.default.shape({\n    left: _propTypes.default.number,\n    right: _propTypes.default.number,\n    top: _propTypes.default.number,\n    bottom: _propTypes.default.number\n  }), _propTypes.default.string, _propTypes.default.oneOf([false])]),\n  defaultClassName: _propTypes.default.string,\n  defaultClassNameDragging: _propTypes.default.string,\n  defaultClassNameDragged: _propTypes.default.string,\n  /**\n   * `defaultPosition` specifies the x and y that the dragged item should start at\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  defaultPosition: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  positionOffset: _propTypes.default.shape({\n    x: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n    y: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])\n  }),\n  /**\n   * `position`, if present, defines the current position of the element.\n   *\n   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n   *  is uncontrolled.\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable position={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  position: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n}));\n_defineProperty(Draggable, \"defaultProps\", _objectSpread(_objectSpread({}, _DraggableCore.default.defaultProps), {}, {\n  axis: 'both',\n  bounds: false,\n  defaultClassName: 'react-draggable',\n  defaultClassNameDragging: 'react-draggable-dragging',\n  defaultClassNameDragged: 'react-draggable-dragged',\n  defaultPosition: {\n    x: 0,\n    y: 0\n  },\n  scale: 1\n}));","map":{"version":3,"names":["_objectWithoutProperties","require","default","_objectSpread","_excluded","Object","defineProperty","exports","value","enumerable","get","_DraggableCore","React","_interopRequireWildcard","_propTypes","_interopRequireDefault","_reactDom","_clsx","_domFns","_positionFns","_shims","_log","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_defineProperty","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","Draggable","Component","getDerivedStateFromProps","_ref","_ref2","position","prevPropsPosition","x","y","constructor","props","e","coreData","shouldStart","onStart","createDraggableData","setState","dragging","dragged","state","uiData","newState","slackX","slackY","bounds","newStateX","newStateY","getBoundPosition","deltaX","deltaY","shouldUpdate","onDrag","shouldContinue","onStop","controlled","Boolean","defaultPosition","isElementSVG","console","warn","componentDidMount","window","SVGElement","findDOMNode","componentWillUnmount","_this$props$nodeRef$c","_this$props","nodeRef","current","render","_this$props2","axis","children","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","positionOffset","scale","draggableCoreProps","style","svgTransform","draggable","validPosition","transformOpts","canDragX","canDragY","createSVGTransform","createCSSTransform","className","createElement","onDragStart","onDragStop","cloneElement","Children","only","transform","propTypes","oneOf","oneOfType","shape","left","number","right","top","bottom","string","dontSetMe","defaultProps"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/node_modules/react-draggable/build/cjs/Draggable.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DraggableCore\", {\n  enumerable: true,\n  get: function () {\n    return _DraggableCore.default;\n  }\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _domFns = require(\"./utils/domFns\");\nvar _positionFns = require(\"./utils/positionFns\");\nvar _shims = require(\"./utils/shims\");\nvar _DraggableCore = _interopRequireDefault(require(\"./DraggableCore\"));\nvar _log = _interopRequireDefault(require(\"./utils/log\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); } /*:: import type {ControlPosition, PositionOffsetControlPosition, DraggableCoreProps, DraggableCoreDefaultProps} from './DraggableCore';*/\n/*:: import type {Bounds, DraggableEventHandler} from './utils/types';*/\n/*:: import type {Element as ReactElement} from 'react';*/\n/*:: type DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  x: number, y: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean,\n  prevPropsPosition: ?ControlPosition,\n};*/\n/*:: export type DraggableDefaultProps = {\n  ...DraggableCoreDefaultProps,\n  axis: 'both' | 'x' | 'y' | 'none',\n  bounds: Bounds | string | false,\n  defaultClassName: string,\n  defaultClassNameDragging: string,\n  defaultClassNameDragged: string,\n  defaultPosition: ControlPosition,\n  scale: number,\n};*/\n/*:: export type DraggableProps = {\n  ...DraggableCoreProps,\n  ...DraggableDefaultProps,\n  positionOffset: PositionOffsetControlPosition,\n  position: ControlPosition,\n};*/\n//\n// Define <Draggable>\n//\nclass Draggable extends React.Component /*:: <DraggableProps, DraggableState>*/{\n  // React 16.3+\n  // Arity (props, state)\n  static getDerivedStateFromProps(_ref /*:: */, _ref2 /*:: */) /*: ?Partial<DraggableState>*/{\n    let {\n      position\n    } /*: DraggableProps*/ = _ref /*: DraggableProps*/;\n    let {\n      prevPropsPosition\n    } /*: DraggableState*/ = _ref2 /*: DraggableState*/;\n    // Set x/y if a new position is provided in props that is different than the previous.\n    if (position && (!prevPropsPosition || position.x !== prevPropsPosition.x || position.y !== prevPropsPosition.y)) {\n      (0, _log.default)('Draggable: getDerivedStateFromProps %j', {\n        position,\n        prevPropsPosition\n      });\n      return {\n        x: position.x,\n        y: position.y,\n        prevPropsPosition: {\n          ...position\n        }\n      };\n    }\n    return null;\n  }\n  constructor(props /*: DraggableProps*/) {\n    super(props);\n    _defineProperty(this, \"onDragStart\", (e, coreData) => {\n      (0, _log.default)('Draggable: onDragStart: %j', coreData);\n\n      // Short-circuit if user's callback killed it.\n      const shouldStart = this.props.onStart(e, (0, _positionFns.createDraggableData)(this, coreData));\n      // Kills start event on core as well, so move handlers are never bound.\n      if (shouldStart === false) return false;\n      this.setState({\n        dragging: true,\n        dragged: true\n      });\n    });\n    _defineProperty(this, \"onDrag\", (e, coreData) => {\n      if (!this.state.dragging) return false;\n      (0, _log.default)('Draggable: onDrag: %j', coreData);\n      const uiData = (0, _positionFns.createDraggableData)(this, coreData);\n      const newState = {\n        x: uiData.x,\n        y: uiData.y,\n        slackX: 0,\n        slackY: 0\n      };\n\n      // Keep within bounds.\n      if (this.props.bounds) {\n        // Save original x and y.\n        const {\n          x,\n          y\n        } = newState;\n\n        // Add slack to the values used to calculate bound position. This will ensure that if\n        // we start removing slack, the element won't react to it right away until it's been\n        // completely removed.\n        newState.x += this.state.slackX;\n        newState.y += this.state.slackY;\n\n        // Get bound position. This will ceil/floor the x and y within the boundaries.\n        const [newStateX, newStateY] = (0, _positionFns.getBoundPosition)(this, newState.x, newState.y);\n        newState.x = newStateX;\n        newState.y = newStateY;\n\n        // Recalculate slack by noting how much was shaved by the boundPosition handler.\n        newState.slackX = this.state.slackX + (x - newState.x);\n        newState.slackY = this.state.slackY + (y - newState.y);\n\n        // Update the event we fire to reflect what really happened after bounds took effect.\n        uiData.x = newState.x;\n        uiData.y = newState.y;\n        uiData.deltaX = newState.x - this.state.x;\n        uiData.deltaY = newState.y - this.state.y;\n      }\n\n      // Short-circuit if user's callback killed it.\n      const shouldUpdate = this.props.onDrag(e, uiData);\n      if (shouldUpdate === false) return false;\n      this.setState(newState);\n    });\n    _defineProperty(this, \"onDragStop\", (e, coreData) => {\n      if (!this.state.dragging) return false;\n\n      // Short-circuit if user's callback killed it.\n      const shouldContinue = this.props.onStop(e, (0, _positionFns.createDraggableData)(this, coreData));\n      if (shouldContinue === false) return false;\n      (0, _log.default)('Draggable: onDragStop: %j', coreData);\n      const newState /*: Partial<DraggableState>*/ = {\n        dragging: false,\n        slackX: 0,\n        slackY: 0\n      };\n\n      // If this is a controlled component, the result of this operation will be to\n      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n      const controlled = Boolean(this.props.position);\n      if (controlled) {\n        const {\n          x,\n          y\n        } = this.props.position;\n        newState.x = x;\n        newState.y = y;\n      }\n      this.setState(newState);\n    });\n    this.state = {\n      // Whether or not we are currently dragging.\n      dragging: false,\n      // Whether or not we have been dragged before.\n      dragged: false,\n      // Current transform x and y.\n      x: props.position ? props.position.x : props.defaultPosition.x,\n      y: props.position ? props.position.y : props.defaultPosition.y,\n      prevPropsPosition: {\n        ...props.position\n      },\n      // Used for compensating for out-of-bounds drags\n      slackX: 0,\n      slackY: 0,\n      // Can only determine if SVG after mounting\n      isElementSVG: false\n    };\n    if (props.position && !(props.onDrag || props.onStop)) {\n      // eslint-disable-next-line no-console\n      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n    }\n  }\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if (typeof window.SVGElement !== 'undefined' && this.findDOMNode() instanceof window.SVGElement) {\n      this.setState({\n        isElementSVG: true\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.setState({\n      dragging: false\n    }); // prevents invariant if unmounted while dragging\n  }\n\n  // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n  // the underlying DOM node ourselves. See the README for more information.\n  findDOMNode() /*: ?HTMLElement*/{\n    var _this$props$nodeRef$c, _this$props;\n    return (_this$props$nodeRef$c = (_this$props = this.props) === null || _this$props === void 0 || (_this$props = _this$props.nodeRef) === null || _this$props === void 0 ? void 0 : _this$props.current) !== null && _this$props$nodeRef$c !== void 0 ? _this$props$nodeRef$c : _reactDom.default.findDOMNode(this);\n  }\n  render() /*: ReactElement<any>*/{\n    const {\n      axis,\n      bounds,\n      children,\n      defaultPosition,\n      defaultClassName,\n      defaultClassNameDragging,\n      defaultClassNameDragged,\n      position,\n      positionOffset,\n      scale,\n      ...draggableCoreProps\n    } = this.props;\n    let style = {};\n    let svgTransform = null;\n\n    // If this is controlled, we don't want to move it - unless it's dragging.\n    const controlled = Boolean(position);\n    const draggable = !controlled || this.state.dragging;\n    const validPosition = position || defaultPosition;\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: (0, _positionFns.canDragX)(this) && draggable ? this.state.x : validPosition.x,\n      // Set top if vertical drag is enabled\n      y: (0, _positionFns.canDragY)(this) && draggable ? this.state.y : validPosition.y\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = (0, _domFns.createSVGTransform)(transformOpts, positionOffset);\n    } else {\n      // Add a CSS transform to move the element around. This allows us to move the element around\n      // without worrying about whether or not it is relatively or absolutely positioned.\n      // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n      // has a clean slate.\n      style = (0, _domFns.createCSSTransform)(transformOpts, positionOffset);\n    }\n\n    // Mark with class while dragging\n    const className = (0, _clsx.default)(children.props.className || '', defaultClassName, {\n      [defaultClassNameDragging]: this.state.dragging,\n      [defaultClassNameDragged]: this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return /*#__PURE__*/React.createElement(_DraggableCore.default, _extends({}, draggableCoreProps, {\n      onStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onStop: this.onDragStop\n    }), /*#__PURE__*/React.cloneElement(React.Children.only(children), {\n      className: className,\n      style: {\n        ...children.props.style,\n        ...style\n      },\n      transform: svgTransform\n    }));\n  }\n}\nexports.default = Draggable;\n_defineProperty(Draggable, \"displayName\", 'Draggable');\n_defineProperty(Draggable, \"propTypes\", {\n  // Accepts all props <DraggableCore> accepts.\n  ..._DraggableCore.default.propTypes,\n  /**\n   * `axis` determines which axis the draggable can move.\n   *\n   *  Note that all callbacks will still return data as normal. This only\n   *  controls flushing to the DOM.\n   *\n   * 'both' allows movement horizontally and vertically.\n   * 'x' limits movement to horizontal axis.\n   * 'y' limits movement to vertical axis.\n   * 'none' limits all movement.\n   *\n   * Defaults to 'both'.\n   */\n  axis: _propTypes.default.oneOf(['both', 'x', 'y', 'none']),\n  /**\n   * `bounds` determines the range of movement available to the element.\n   * Available values are:\n   *\n   * 'parent' restricts movement within the Draggable's parent node.\n   *\n   * Alternatively, pass an object with the following properties, all of which are optional:\n   *\n   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n   *\n   * All values are in px.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable bounds={{right: 300, bottom: 300}}>\n   *              <div>Content</div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  bounds: _propTypes.default.oneOfType([_propTypes.default.shape({\n    left: _propTypes.default.number,\n    right: _propTypes.default.number,\n    top: _propTypes.default.number,\n    bottom: _propTypes.default.number\n  }), _propTypes.default.string, _propTypes.default.oneOf([false])]),\n  defaultClassName: _propTypes.default.string,\n  defaultClassNameDragging: _propTypes.default.string,\n  defaultClassNameDragged: _propTypes.default.string,\n  /**\n   * `defaultPosition` specifies the x and y that the dragged item should start at\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  defaultPosition: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  positionOffset: _propTypes.default.shape({\n    x: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n    y: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])\n  }),\n  /**\n   * `position`, if present, defines the current position of the element.\n   *\n   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n   *  is uncontrolled.\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable position={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  position: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n});\n_defineProperty(Draggable, \"defaultProps\", {\n  ..._DraggableCore.default.defaultProps,\n  axis: 'both',\n  bounds: false,\n  defaultClassName: 'react-draggable',\n  defaultClassNameDragging: 'react-draggable-dragging',\n  defaultClassNameDragged: 'react-draggable-dragged',\n  defaultPosition: {\n    x: 0,\n    y: 0\n  },\n  scale: 1\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}