{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/toshi/Desktop/TripMood/trip-moodboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from'react';import styled from'styled-components';import{useMoodboard}from'../context/MoodboardContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TimelineContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  grid-area: timeline;\\n  background-color: var(--bg-secondary);\\n  border-radius: 8px;\\n  padding: 12px;\\n  margin-top: 8px;\\n  box-shadow: 0 2px 4px var(--shadow-color);\\n\"])));const TimelineBar=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  height: 48px;\\n  padding: 0 16px;\\n  background-color: var(--bg-tertiary);\\n  border-radius: 24px;\\n  position: relative;\\n\"])));const TimeButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: var(--text-primary);\\n  border: 2px solid var(--border-color);\\n  border-radius: 20px;\\n  padding: 6px 12px;\\n  font-size: 0.9rem;\\n  font-weight: 500;\\n  cursor: pointer;\\n  outline: none;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  box-shadow: \",\";\\n  transition: all 0.2s ease;\\n  position: relative;\\n\\n  &:hover {\\n    background: var(--bg-primary);\\n    transform: translateY(-2px);\\n  }\\n\"])),_ref=>{let{selected}=_ref;return selected?'var(--bg-primary)':'transparent';},_ref2=>{let{selected}=_ref2;return selected?'0 2px 8px var(--shadow-color)':'none';});const StickerCount=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background: var(--bg-primary);\\n  color: var(--text-primary);\\n  border: 1.5px solid var(--border-color);\\n  border-radius: 50%;\\n  font-size: 0.7rem;\\n  font-weight: 600;\\n  width: 18px;\\n  height: 18px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  position: absolute;\\n  top: -10px;\\n  right: -8px;\\n  box-shadow: 0 1px 4px var(--shadow-color);\\n\"])));const Timeline=()=>{const{state,dispatch}=useMoodboard();const times=['00:00','01:00','02:00','03:00','04:00','5:00','06:00','07:00','8:00','9:00','10:00','11:00','12:00'];const handleTimeClick=time=>{dispatch({type:'SET_TIME',payload:time});};const getStickerCount=time=>{return state.stickers.filter(sticker=>sticker.time===time).length;};return/*#__PURE__*/_jsx(TimelineContainer,{children:/*#__PURE__*/_jsx(TimelineBar,{children:times.map(time=>/*#__PURE__*/_jsxs(TimeButton,{selected:state.selectedTime===time,onClick:()=>handleTimeClick(time),children:[time,getStickerCount(time)>0&&/*#__PURE__*/_jsx(StickerCount,{children:getStickerCount(time)})]},time))})});};export default Timeline;","map":{"version":3,"names":["React","styled","useMoodboard","jsx","_jsx","jsxs","_jsxs","TimelineContainer","div","_templateObject","_taggedTemplateLiteral","TimelineBar","_templateObject2","TimeButton","button","_templateObject3","_ref","selected","_ref2","StickerCount","span","_templateObject4","Timeline","state","dispatch","times","handleTimeClick","time","type","payload","getStickerCount","stickers","filter","sticker","length","children","map","selectedTime","onClick"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/src/components/Timeline.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMoodboard } from '../context/MoodboardContext';\r\n\r\nconst TimelineContainer = styled.div`\r\n  grid-area: timeline;\r\n  background-color: var(--bg-secondary);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  margin-top: 8px;\r\n  box-shadow: 0 2px 4px var(--shadow-color);\r\n`;\r\n\r\nconst TimelineBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 48px;\r\n  padding: 0 16px;\r\n  background-color: var(--bg-tertiary);\r\n  border-radius: 24px;\r\n  position: relative;\r\n`;\r\n\r\nconst TimeButton = styled.button<{ selected: boolean }>`\r\n  background: ${({ selected }) => (selected ? 'var(--bg-primary)' : 'transparent')};\r\n  color: var(--text-primary);\r\n  border: 2px solid var(--border-color);\r\n  border-radius: 20px;\r\n  padding: 6px 12px;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  outline: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-shadow: ${({ selected }) => (selected ? '0 2px 8px var(--shadow-color)' : 'none')};\r\n  transition: all 0.2s ease;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background: var(--bg-primary);\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst StickerCount = styled.span`\r\n  background: var(--bg-primary);\r\n  color: var(--text-primary);\r\n  border: 1.5px solid var(--border-color);\r\n  border-radius: 50%;\r\n  font-size: 0.7rem;\r\n  font-weight: 600;\r\n  width: 18px;\r\n  height: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: -10px;\r\n  right: -8px;\r\n  box-shadow: 0 1px 4px var(--shadow-color);\r\n`;\r\n\r\nconst Timeline: React.FC = () => {\r\n  const { state, dispatch } = useMoodboard();\r\n  const times = ['00:00','01:00', '02:00', '03:00', '04:00', '5:00','06:00', '07:00', '8:00', '9:00', '10:00', '11:00','12:00'];\r\n\r\n  const handleTimeClick = (time: string) => {\r\n    dispatch({ type: 'SET_TIME', payload: time });\r\n  };\r\n\r\n  const getStickerCount = (time: string) => {\r\n    return state.stickers.filter(sticker => sticker.time === time).length;\r\n  };\r\n\r\n  return (\r\n    <TimelineContainer>\r\n      <TimelineBar>\r\n        {times.map(time => (\r\n          <TimeButton\r\n            key={time}\r\n            selected={state.selectedTime === time}\r\n            onClick={() => handleTimeClick(time)}\r\n          >\r\n            {time}\r\n            {getStickerCount(time) > 0 && (\r\n              <StickerCount>{getStickerCount(time)}</StickerCount>\r\n            )}\r\n          </TimeButton>\r\n        ))}\r\n      </TimelineBar>\r\n    </TimelineContainer>\r\n  );\r\n};\r\n\r\nexport default Timeline; "],"mappings":"2NAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,YAAY,KAAQ,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,iBAAiB,CAAGN,MAAM,CAACO,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,uLAOnC,CAED,KAAM,CAAAC,WAAW,CAAGV,MAAM,CAACO,GAAG,CAAAI,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,oNAS7B,CAED,KAAM,CAAAG,UAAU,CAAGZ,MAAM,CAACa,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAL,sBAAA,8cAChBM,IAAA,MAAC,CAAEC,QAAS,CAAC,CAAAD,IAAA,OAAM,CAAAC,QAAQ,CAAG,mBAAmB,CAAG,aAAa,EAAC,CAYlEC,KAAA,MAAC,CAAED,QAAS,CAAC,CAAAC,KAAA,OAAM,CAAAD,QAAQ,CAAG,+BAA+B,CAAG,MAAM,EAAC,CAQtF,CAED,KAAM,CAAAE,YAAY,CAAGlB,MAAM,CAACmB,IAAI,CAAAC,gBAAA,GAAAA,gBAAA,CAAAX,sBAAA,oYAgB/B,CAED,KAAM,CAAAY,QAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAGtB,YAAY,CAAC,CAAC,CAC1C,KAAM,CAAAuB,KAAK,CAAG,CAAC,OAAO,CAAC,OAAO,CAAE,OAAO,CAAE,OAAO,CAAE,OAAO,CAAE,MAAM,CAAC,OAAO,CAAE,OAAO,CAAE,MAAM,CAAE,MAAM,CAAE,OAAO,CAAE,OAAO,CAAC,OAAO,CAAC,CAE7H,KAAM,CAAAC,eAAe,CAAIC,IAAY,EAAK,CACxCH,QAAQ,CAAC,CAAEI,IAAI,CAAE,UAAU,CAAEC,OAAO,CAAEF,IAAK,CAAC,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAG,eAAe,CAAIH,IAAY,EAAK,CACxC,MAAO,CAAAJ,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAACC,OAAO,EAAIA,OAAO,CAACN,IAAI,GAAKA,IAAI,CAAC,CAACO,MAAM,CACvE,CAAC,CAED,mBACE9B,IAAA,CAACG,iBAAiB,EAAA4B,QAAA,cAChB/B,IAAA,CAACO,WAAW,EAAAwB,QAAA,CACTV,KAAK,CAACW,GAAG,CAACT,IAAI,eACbrB,KAAA,CAACO,UAAU,EAETI,QAAQ,CAAEM,KAAK,CAACc,YAAY,GAAKV,IAAK,CACtCW,OAAO,CAAEA,CAAA,GAAMZ,eAAe,CAACC,IAAI,CAAE,CAAAQ,QAAA,EAEpCR,IAAI,CACJG,eAAe,CAACH,IAAI,CAAC,CAAG,CAAC,eACxBvB,IAAA,CAACe,YAAY,EAAAgB,QAAA,CAAEL,eAAe,CAACH,IAAI,CAAC,CAAe,CACpD,GAPIA,IAQK,CACb,CAAC,CACS,CAAC,CACG,CAAC,CAExB,CAAC,CAED,cAAe,CAAAL,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}