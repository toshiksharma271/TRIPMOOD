{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toshi\\\\Desktop\\\\TripMood\\\\trip-moodboard\\\\src\\\\components\\\\MoodboardCanvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n  background: rgba(255, 255, 255, 0.5);\n  border-radius: 8px;\n`;\n_c = CanvasContainer;\nconst StickerWrapper = styled.div`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  transform: rotate(${props => props.rotation}deg);\n  cursor: move;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${props => props.size * 0.6}px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.2s ease;\n\n  &:hover {\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);\n  }\n`;\n_c2 = StickerWrapper;\nconst TimeLabel = styled.div`\n  position: absolute;\n  bottom: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  white-space: nowrap;\n`;\n_c3 = TimeLabel;\nconst MoodboardCanvas = () => {\n  _s();\n  const [stickers, setStickers] = useState([]);\n  const [selectedTime, setSelectedTime] = useState('12:00');\n  useEffect(() => {\n    const handleTimeUpdate = e => {\n      setSelectedTime(e.detail);\n    };\n    window.addEventListener('timeUpdate', handleTimeUpdate);\n    return () => {\n      window.removeEventListener('timeUpdate', handleTimeUpdate);\n    };\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    const stickerData = JSON.parse(e.dataTransfer.getData('application/json'));\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const newSticker = {\n      ...stickerData,\n      id: `${stickerData.id}-${Date.now()}`,\n      position: {\n        x,\n        y\n      },\n      size: stickerData.defaultSize,\n      rotation: 0,\n      time: selectedTime\n    };\n    setStickers(prev => [...prev, newSticker]);\n  }, [selectedTime]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n  }, []);\n  const handleDrag = useCallback((id, e, data) => {\n    setStickers(prev => prev.map(sticker => sticker.id === id ? {\n      ...sticker,\n      position: {\n        x: data.x,\n        y: data.y\n      }\n    } : sticker));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CanvasContainer, {\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    children: stickers.map(sticker => /*#__PURE__*/_jsxDEV(Draggable, {\n      position: sticker.position,\n      onDrag: (e, data) => handleDrag(sticker.id, e, data),\n      children: /*#__PURE__*/_jsxDEV(StickerWrapper, {\n        size: sticker.size,\n        rotation: sticker.rotation,\n        className: `sticker ${sticker.time === selectedTime ? 'highlighted' : ''}`,\n        children: [sticker.icon, /*#__PURE__*/_jsxDEV(TimeLabel, {\n          children: sticker.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, sticker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodboardCanvas, \"9qmiPkFt7/RKMrgD8w39dPa42/4=\");\n_c4 = MoodboardCanvas;\nexport default MoodboardCanvas;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CanvasContainer\");\n$RefreshReg$(_c2, \"StickerWrapper\");\n$RefreshReg$(_c3, \"TimeLabel\");\n$RefreshReg$(_c4, \"MoodboardCanvas\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","Draggable","jsxDEV","_jsxDEV","CanvasContainer","div","_c","StickerWrapper","props","size","rotation","_c2","TimeLabel","_c3","MoodboardCanvas","_s","stickers","setStickers","selectedTime","setSelectedTime","handleTimeUpdate","e","detail","window","addEventListener","removeEventListener","handleDrop","preventDefault","stickerData","JSON","parse","dataTransfer","getData","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","newSticker","id","Date","now","position","defaultSize","time","prev","handleDragOver","dropEffect","handleDrag","data","map","sticker","onDrop","onDragOver","children","onDrag","className","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/src/components/MoodboardCanvas.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Draggable from 'react-draggable';\r\nimport { Sticker } from '../utils/stickersData';\r\n\r\ninterface PlacedSticker extends Sticker {\r\n  id: string;\r\n  position: { x: number; y: number };\r\n  size: number;\r\n  rotation: number;\r\n  time: string;\r\n}\r\n\r\nconst CanvasContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background: rgba(255, 255, 255, 0.5);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst StickerWrapper = styled.div<{ size: number; rotation: number }>`\r\n  position: absolute;\r\n  width: ${props => props.size}px;\r\n  height: ${props => props.size}px;\r\n  transform: rotate(${props => props.rotation}deg);\r\n  cursor: move;\r\n  user-select: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: ${props => props.size * 0.6}px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  transition: box-shadow 0.2s ease;\r\n\r\n  &:hover {\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\n\r\nconst TimeLabel = styled.div`\r\n  position: absolute;\r\n  bottom: -20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  font-size: 0.75rem;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst MoodboardCanvas: React.FC = () => {\r\n  const [stickers, setStickers] = useState<PlacedSticker[]>([]);\r\n  const [selectedTime, setSelectedTime] = useState('12:00');\r\n\r\n  useEffect(() => {\r\n    const handleTimeUpdate = (e: CustomEvent) => {\r\n      setSelectedTime(e.detail);\r\n    };\r\n\r\n    window.addEventListener('timeUpdate' as any, handleTimeUpdate);\r\n    return () => {\r\n      window.removeEventListener('timeUpdate' as any, handleTimeUpdate);\r\n    };\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    const stickerData = JSON.parse(e.dataTransfer.getData('application/json')) as Sticker;\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    const newSticker: PlacedSticker = {\r\n      ...stickerData,\r\n      id: `${stickerData.id}-${Date.now()}`,\r\n      position: { x, y },\r\n      size: stickerData.defaultSize,\r\n      rotation: 0,\r\n      time: selectedTime\r\n    };\r\n\r\n    setStickers(prev => [...prev, newSticker]);\r\n  }, [selectedTime]);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'copy';\r\n  }, []);\r\n\r\n  const handleDrag = useCallback((id: string, e: any, data: { x: number; y: number }) => {\r\n    setStickers(prev =>\r\n      prev.map(sticker =>\r\n        sticker.id === id\r\n          ? { ...sticker, position: { x: data.x, y: data.y } }\r\n          : sticker\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <CanvasContainer\r\n      onDrop={handleDrop}\r\n      onDragOver={handleDragOver}\r\n    >\r\n      {stickers.map(sticker => (\r\n        <Draggable\r\n          key={sticker.id}\r\n          position={sticker.position}\r\n          onDrag={(e, data) => handleDrag(sticker.id, e, data)}\r\n        >\r\n          <StickerWrapper\r\n            size={sticker.size}\r\n            rotation={sticker.rotation}\r\n            className={`sticker ${sticker.time === selectedTime ? 'highlighted' : ''}`}\r\n          >\r\n            {sticker.icon}\r\n            <TimeLabel>{sticker.time}</TimeLabel>\r\n          </StickerWrapper>\r\n        </Draggable>\r\n      ))}\r\n    </CanvasContainer>\r\n  );\r\n};\r\n\r\nexport default MoodboardCanvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}