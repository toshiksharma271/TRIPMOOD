{"ast":null,"code":"import _objectSpread from\"C:/Users/toshi/Desktop/TripMood/trip-moodboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={stickers:[],selectedTime:'12:00',history:[[]],historyIndex:0,selectedSticker:null};const MoodboardContext=/*#__PURE__*/createContext(null);const moodboardReducer=(state,action)=>{switch(action.type){case'ADD_STICKER':{const newStickers=[...state.stickers,action.payload];return _objectSpread(_objectSpread({},state),{},{stickers:newStickers,history:[...state.history.slice(0,state.historyIndex+1),newStickers],historyIndex:state.historyIndex+1});}case'UPDATE_STICKER':{const newStickers=state.stickers.map(sticker=>sticker.id===action.payload.id?_objectSpread(_objectSpread({},sticker),action.payload.updates):sticker);return _objectSpread(_objectSpread({},state),{},{stickers:newStickers,history:[...state.history.slice(0,state.historyIndex+1),newStickers],historyIndex:state.historyIndex+1});}case'DELETE_STICKER':{const newStickers=state.stickers.filter(sticker=>sticker.id!==action.payload);return _objectSpread(_objectSpread({},state),{},{stickers:newStickers,history:[...state.history.slice(0,state.historyIndex+1),newStickers],historyIndex:state.historyIndex+1});}case'SET_TIME':return _objectSpread(_objectSpread({},state),{},{selectedTime:action.payload});case'SELECT_STICKER':return _objectSpread(_objectSpread({},state),{},{selectedSticker:action.payload});case'UNDO':if(state.historyIndex>0){return _objectSpread(_objectSpread({},state),{},{stickers:state.history[state.historyIndex-1],historyIndex:state.historyIndex-1});}return state;case'REDO':if(state.historyIndex<state.history.length-1){return _objectSpread(_objectSpread({},state),{},{stickers:state.history[state.historyIndex+1],historyIndex:state.historyIndex+1});}return state;default:return state;}};export const MoodboardProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(moodboardReducer,initialState);return/*#__PURE__*/_jsx(MoodboardContext.Provider,{value:{state,dispatch},children:children});};export const useMoodboard=()=>{const context=useContext(MoodboardContext);if(!context){throw new Error('useMoodboard must be used within a MoodboardProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","initialState","stickers","selectedTime","history","historyIndex","selectedSticker","MoodboardContext","moodboardReducer","state","action","type","newStickers","payload","_objectSpread","slice","map","sticker","id","updates","filter","length","MoodboardProvider","_ref","children","dispatch","Provider","value","useMoodboard","context","Error"],"sources":["C:/Users/toshi/Desktop/TripMood/trip-moodboard/src/context/MoodboardContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { Sticker } from '../components/stickersData';\r\n\r\ninterface PlacedSticker extends Sticker {\r\n  id: string;\r\n  position: { x: number; y: number };\r\n  size: number;\r\n  rotation: number;\r\n  time: string;\r\n  zIndex: number;\r\n}\r\n\r\ninterface MoodboardState {\r\n  stickers: PlacedSticker[];\r\n  selectedTime: string;\r\n  history: PlacedSticker[][];\r\n  historyIndex: number;\r\n  selectedSticker: string | null;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'ADD_STICKER'; payload: PlacedSticker }\r\n  | { type: 'UPDATE_STICKER'; payload: { id: string; updates: Partial<PlacedSticker> } }\r\n  | { type: 'DELETE_STICKER'; payload: string }\r\n  | { type: 'SET_TIME'; payload: string }\r\n  | { type: 'SELECT_STICKER'; payload: string | null }\r\n  | { type: 'UNDO' }\r\n  | { type: 'REDO' };\r\n\r\nconst initialState: MoodboardState = {\r\n  stickers: [],\r\n  selectedTime: '12:00',\r\n  history: [[]],\r\n  historyIndex: 0,\r\n  selectedSticker: null,\r\n};\r\n\r\nconst MoodboardContext = createContext<{\r\n  state: MoodboardState;\r\n  dispatch: React.Dispatch<Action>;\r\n} | null>(null);\r\n\r\nconst moodboardReducer = (state: MoodboardState, action: Action): MoodboardState => {\r\n  switch (action.type) {\r\n    case 'ADD_STICKER': {\r\n      const newStickers = [...state.stickers, action.payload];\r\n      return {\r\n        ...state,\r\n        stickers: newStickers,\r\n        history: [...state.history.slice(0, state.historyIndex + 1), newStickers],\r\n        historyIndex: state.historyIndex + 1,\r\n      };\r\n    }\r\n    case 'UPDATE_STICKER': {\r\n      const newStickers = state.stickers.map(sticker =>\r\n        sticker.id === action.payload.id\r\n          ? { ...sticker, ...action.payload.updates }\r\n          : sticker\r\n      );\r\n      return {\r\n        ...state,\r\n        stickers: newStickers,\r\n        history: [...state.history.slice(0, state.historyIndex + 1), newStickers],\r\n        historyIndex: state.historyIndex + 1,\r\n      };\r\n    }\r\n    case 'DELETE_STICKER': {\r\n      const newStickers = state.stickers.filter(sticker => sticker.id !== action.payload);\r\n      return {\r\n        ...state,\r\n        stickers: newStickers,\r\n        history: [...state.history.slice(0, state.historyIndex + 1), newStickers],\r\n        historyIndex: state.historyIndex + 1,\r\n      };\r\n    }\r\n    case 'SET_TIME':\r\n      return { ...state, selectedTime: action.payload };\r\n    case 'SELECT_STICKER':\r\n      return { ...state, selectedSticker: action.payload };\r\n    case 'UNDO':\r\n      if (state.historyIndex > 0) {\r\n        return {\r\n          ...state,\r\n          stickers: state.history[state.historyIndex - 1],\r\n          historyIndex: state.historyIndex - 1,\r\n        };\r\n      }\r\n      return state;\r\n    case 'REDO':\r\n      if (state.historyIndex < state.history.length - 1) {\r\n        return {\r\n          ...state,\r\n          stickers: state.history[state.historyIndex + 1],\r\n          historyIndex: state.historyIndex + 1,\r\n        };\r\n      }\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const MoodboardProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(moodboardReducer, initialState);\r\n\r\n  return (\r\n    <MoodboardContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </MoodboardContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMoodboard = () => {\r\n  const context = useContext(MoodboardContext);\r\n  if (!context) {\r\n    throw new Error('useMoodboard must be used within a MoodboardProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}